.select,
.select::before,
.select::after {
  box-sizing: border-box;
}
:root {
    --select-border: #777;
    --select-focus: blue;
    --select-arrow: var(--select-border);
  }
  
.select {
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    background-color: transparent;
    border: none;
    padding: 0 1em 0 0;
    margin: 0;
    width: 100%;
    font-family: inherit;
    font-size: inherit;
    cursor: inherit;
    line-height: inherit;
    z-index: 1;
    outline: none;
  }
.select::-ms-expand {
    display: none;
  }
  
  .select {
    display: grid;
    grid-template-areas: "select";
    align-items: center;
    position: relative;
    min-width: 15ch;
    max-width: 100ch;
    border: 1px solid var(--select-border);
    border-radius: 0.25em;
    padding: 0.25em 0.5em;
    font-size: 1rem;
    cursor: pointer;
    line-height: 1.1;
    background-color: #fff;
    background-image: linear-gradient(to top, #f9f9f9, #fff 33%);
  }
  .select select, .select::after {
    grid-area: select;
  }
  .select:not(.select--multiple)::after {
    content: "";
    justify-self: end;
    width: 0.8em;
    height: 0.5em;
    background-color: var(--select-arrow);
    -webkit-clip-path: polygon(100% 0%, 0 0%, 50% 100%);
            clip-path: polygon(100% 0%, 0 0%, 50% 100%);
  }
  
  .select:focus + .focus {
    position: absolute;
    top: -1px;
    left: -1px;
    right: -1px;
    bottom: -1px;
    border: 2px solid var(--select-focus);
    border-radius: inherit;
  }
  
  .select[multiple] {
    padding-right: 0;
    /*
     * Safari will not reveal an option
     * unless the select height has room to 
     * show all of it
     * Firefox and Chrome allow showing 
     * a partial option
     */
    height: 6rem;
    /* 
     * Experimental - styling of selected options
     * in the multiselect
     * Not supported crossbrowser
     */
  }
  .select[multiple] option {
    white-space: normal;
    outline-color: var(--select-focus);
  }
  
  .select--disabled {
    cursor: not-allowed;
    background-color: #eee;
    background-image: linear-gradient(to top, #ddd, #eee 33%);
  }
  
  .select label {
    font-size: 1.125rem;
    font-weight: 500;
  }
  
  .select + label {
    margin-top: 2rem;
  }

  .inputBox {
    margin: 1rem 0;
    padding: .5rem;
  }

  .inputBox .input {
    width: auto;
    background-color: #FCFCFD;
    border-radius: 4px 0 0 4px;
    border-width: 0;
    box-shadow: rgba(45, 35, 66, 0.4) 0 2px 0px,rgba(45, 35, 66, 0.3) 0 7px 0px -3px,#D6D6E7 0 -3px 0 inset;
    transition: box-shadow .15s;
    z-index: 20;
  }

  .inputBox .input:focus {
    border: none;
    box-shadow: #D6D6E7 0 0 0 1.5px inset, rgba(45, 35, 66, 0.4) 0 2px 4px, rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #D6D6E7 0 -3px 0 inset;
  }

.inputBox .input-btn {
  align-items: center;
  appearance: none;
  background-color: #FCFCFD;
  border-radius: 0 4px 4px 0;
  border-width: 0;
  box-shadow: rgba(45, 35, 66, 0.4) 0 2px 0px,rgba(45, 35, 66, 0.3) 0 7px 0px -3px,#D6D6E7 0 -3px 0 inset;
  box-sizing: border-box;
  color: #36395A;
  cursor: pointer;
  display: inline-flex;
  font-family: "JetBrains Mono",monospace;
  height: 40px;
  justify-content: center;
  line-height: 1;
  list-style: none;
  overflow: hidden;
  padding-left: 16px;
  padding-right: 16px;
  position: relative;
  text-align: left;
  text-decoration: none;
  transition: box-shadow .15s,transform .15s;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  white-space: nowrap;
  will-change: box-shadow,transform;
  font-size: 18px;
  transform: translateX(-1rem);
}

.inputBox .input-btn:focus {
  box-shadow: #D6D6E7 0 0 0 1.5px inset, rgba(45, 35, 66, 0.4) 0 2px 4px, rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #D6D6E7 0 -3px 0 inset;
}

.inputBox .input-btn:hover {
  box-shadow: rgba(45, 35, 66, 0.4) 0 4px 8px, rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #D6D6E7 0 -3px 0 inset;
  transform: translateY(-2px);
}

.inputBox .input-btn:active {
  box-shadow: #D6D6E7 0 3px 7px inset;
  transform: translateY(2px);
}